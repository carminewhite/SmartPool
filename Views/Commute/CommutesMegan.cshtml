@{
    Layout = null;
}
@model Commute

<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Test</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 60%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
      #warnings-panel {
        width: 100%;
        height:10%;
        text-align: center;
      }
    </style>
  </head>
  <body>

    <script>
      function initMap() {
        var markerArray = [];

        // Instantiate a directions service.
        var directionsService = new google.maps.DirectionsService;

        // Create a map and center it on Manhattan.
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 13,
          center: @Model.startLocation.Coords
        });

        // Create a renderer for directions and bind it to the map.
        var directionsDisplay = new google.maps.DirectionsRenderer({map: map});

        // Instantiate an info window to hold step text.
        var stepDisplay = new google.maps.InfoWindow;

        // Display the route between the initial start and end selections.
        calculateAndDisplayRoute(
            directionsDisplay, directionsService, markerArray, stepDisplay, map);
        // Listen to change events from the start and end lists.
      }

      function calculateAndDisplayRoute(directionsDisplay, directionsService,
          markerArray, stepDisplay, map) {
        // First, remove any existing markers from the map.
        for (var i = 0; i < markerArray.length; i++) {
          markerArray[i].setMap(null);
        }

        // Retrieve the start and end locations and create a DirectionsRequest using
        // WALKING directions.
        directionsService.route({
          origin: @Model.startLocation.Coords,
          destination: @Model.endLocation.Coords,
          travelMode: 'DRIVING'
        }, function(response, status) {
          // Route the directions and pass the response to a function to create
          // markers for each step.
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
            showSteps(response, markerArray, stepDisplay, map);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }

      function showSteps(directionResult, markerArray, stepDisplay, map) {
        // For each step, place a marker, and add the text to the marker's infowindow.
        // Also attach the marker to an array so we can keep track of it and remove it
        // when calculating new routes.
        var myRoute = directionResult.routes[0].legs[0];
        /* for (var i = 0; i < myRoute.steps.length; i++) {
          var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;
          marker.setMap(map);
          marker.setPosition(myRoute.steps[i].start_location);
          attachInstructionText(
              stepDisplay, marker, myRoute.steps[i].instructions, map);
        } */
      }

      function attachInstructionText(stepDisplay, marker, text, map) {
        google.maps.event.addListener(marker, 'click', function() {
          // Open an info window when the marker is clicked on, containing the text
          // of the step.
          stepDisplay.setContent(text);
          stepDisplay.open(map, marker);
        });
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhc_4rfCm9kufSuafhtXU56C_gaeayl1o&callback=initMap">
    </script>



<partial name="_Nav"/>
<hr>
<div class="row">
    <div class="col">
        <table class="mt-4 table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col-3">Commute Day</th>
                    <th scope="col-3">Arrival</th>
                    <th scope="col-3">Start Point</th>
                    <th scope="col-3">End Point</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td scope="col-3">Thurs</td>
                    <td scope="col-3">8:00AM</td>
                    <td scope="col-3">Bellevue</td>
                    <td scope="col-3"><a href="">Seattle</a></td>
                    <td><a href="/commutes/10">Show</a></td>
                </tr>
                <tr>
                    <td scope="col-3">Tues</td>
                    <td scope="col-3">8:00AM</td>
                    <td scope="col-3">Bellevue</td>
                    <td scope="col-3"><a href="">Seattle</a></td>
                    <td><a href="/commutes/8">Show</a></td>
                </tr>
                <tr>
                    <td scope="col-3">Mon</td>
                    <td scope="col-3">8:00AM</td>
                    <td scope="col-3">Bellevue</td>
                    <td scope="col-3"><a href="">Seattle</a></td>
                    <td><a href="/commutes/9">Show</a></td>
                </tr>
                <tr>
                    <td scope="col-3">Mon</td>
                    <td scope="col-3">8:00AM</td>
                    <td scope="col-3"><a href="">Bellevue</a></td>
                    <td scope="col-3"><a href="">Seattle</a></td>
                    <td>Show</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col" id="map">
        <!-- <iframe width="600" height="450" frameborder="0" style="border:0" src="https://www.google.com/maps/embed/v1/place?q=bellevue%2C%20wa&key=AIzaSyBHgUzRMiC3ijP03NQFqupHlPljcL8smdE" allowfullscreen></iframe> -->
    </div>
</div>
<partial name="_CarpoolSchedule"/>

  </body>
</html>